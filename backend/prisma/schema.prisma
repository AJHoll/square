generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model adm_group {
  id             Decimal          @id(map: "pk_adm_group") @default(dbgenerated("nextval('seq_adm_group'::regclass)")) @db.Decimal(15, 0)
  name           String           @unique(map: "udx_adm_group_name") @default("") @db.VarChar(30)
  caption        String?          @db.VarChar(254)
  description    String?          @db.VarChar(4000)
  adm_group_role adm_group_role[]
  adm_user_group adm_user_group[]
  sqr_role       sqr_role[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model adm_group_role {
  id        Decimal   @id(map: "pk_adm_role_in_group") @default(dbgenerated("nextval('seq_adm_group_role'::regclass)")) @db.Decimal(15, 0)
  group_id  Decimal   @db.Decimal(15, 0)
  role_id   Decimal   @db.Decimal(15, 0)
  adm_group adm_group @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adm_role_in_group_group")
  adm_role  adm_role  @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adm_role_in_group_role")

  @@unique([group_id, role_id], map: "udx_adm_role_in_group_group_role_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model adm_role {
  id                 Decimal              @id(map: "pk_adm_role") @default(dbgenerated("nextval('seq_adm_role'::regclass)")) @db.Decimal(15, 0)
  name               String               @unique(map: "udx_adm_role_name") @default("") @db.VarChar(30)
  caption            String?              @db.VarChar(254)
  description        String?              @db.VarChar(4000)
  adm_group_role     adm_group_role[]
  adm_role_menu_item adm_role_menu_item[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model adm_role_menu_item {
  id            Decimal       @id(map: "pk_adm_role_menu_item") @default(dbgenerated("nextval('seq_adm_role_menu_item'::regclass)")) @db.Decimal(15, 0)
  role_id       Decimal       @db.Decimal(15, 0)
  menu_item_id  Decimal       @db.Decimal(15, 0)
  krn_menu_item krn_menu_item @relation(fields: [menu_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adm_role_menu_item_menu_item_id")
  adm_role      adm_role      @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adm_role_menu_item_role_id")

  @@unique([role_id, menu_item_id], map: "udx_adm_role_menu_item_role_id_menu_item_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model adm_user {
  id                  Decimal               @id(map: "pk_adm_user") @default(dbgenerated("nextval('seq_adm_user'::regclass)")) @db.Decimal(15, 0)
  name                String                @unique(map: "udx_adm_user_name") @default("") @db.VarChar(30)
  caption             String?               @db.VarChar(254)
  hash                String?               @db.VarChar(254)
  person_id           Decimal?              @db.Decimal(15, 0)
  adm_user_group      adm_user_group[]
  sqr_question        sqr_question[]
  sqr_question_answer sqr_question_answer[]
  sqr_square_user     sqr_square_user[]

  @@index([person_id], map: "idx_adm_user_person_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model adm_user_group {
  id        Decimal   @id(map: "pk_adm_group_in_user") @default(dbgenerated("nextval('seq_adm_user_group'::regclass)")) @db.Decimal(15, 0)
  user_id   Decimal   @db.Decimal(15, 0)
  group_id  Decimal   @db.Decimal(15, 0)
  adm_group adm_group @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adm_group_in_user_group_id")
  adm_user  adm_user  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adm_group_in_user_user_id")

  @@unique([user_id, group_id], map: "udx_adm_group_in_user_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model krn_menu_group {
  id            Decimal         @id(map: "pk_krn_manu_group") @default(dbgenerated("nextval('seq_krn_menu_group'::regclass)")) @db.Decimal(15, 0)
  title         String?         @unique(map: "udx_krn_manu_group_title") @db.VarChar(254)
  icon          String?         @db.VarChar(254)
  krn_menu_item krn_menu_item[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model krn_menu_item {
  id                 Decimal              @id(map: "pk_krn_menu_item") @default(dbgenerated("nextval('seq_krn_menu_item'::regclass)")) @db.Decimal(15, 0)
  group_id           Decimal              @db.Decimal(15, 0)
  title              String?              @db.VarChar(254)
  url                String?              @db.VarChar(254)
  icon               String?              @db.VarChar(254)
  adm_role_menu_item adm_role_menu_item[]
  krn_menu_group     krn_menu_group       @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_krn_menu_item_group_id")

  @@unique([group_id, title], map: "udx_krn_menu_item_group_id_title")
  @@index([group_id], map: "idx_krn_menu_item_group_id")
  @@index([title], map: "idx_krn_menu_item_title")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_criteria {
  id         Decimal    @id(map: "pk_sqr_criteria") @default(dbgenerated("nextval('seq_sqr_criteria'::regclass)")) @db.Decimal(15, 0)
  square_id  Decimal    @unique(map: "udx_sqr_criteria_square_id") @db.Decimal(15, 0)
  criterias  Json       @db.Json
  sqr_square sqr_square @relation(fields: [square_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_criteria_square_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_question {
  id                  Decimal               @id(map: "pk_sqr_question") @default(dbgenerated("nextval('seq_sqr_question'::regclass)")) @db.Decimal(15, 0)
  square_id           Decimal               @db.Decimal(15, 0)
  team_id             Decimal               @db.Decimal(15, 0)
  user_id             Decimal               @db.Decimal(15, 0)
  question            String                @default("")
  question_time       DateTime              @default(dbgenerated("(now())::public.t_datetime")) @db.Timestamp(6)
  sqr_square          sqr_square            @relation(fields: [square_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_question_square_id")
  sqr_square_team     sqr_square_team       @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_question_team_id")
  adm_user            adm_user              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sqr_question_user_id")
  sqr_question_answer sqr_question_answer[]

  @@index([square_id], map: "idx_sqr_question_square_id")
  @@index([team_id], map: "idx_sqr_question_team_id")
  @@index([user_id], map: "idx_sqr_question_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_question_answer {
  id           Decimal      @id(map: "pk_sqr_question_answer") @default(dbgenerated("nextval('seq_sqr_question_answer'::regclass)")) @db.Decimal(15, 0)
  question_id  Decimal      @db.Decimal(15, 0)
  user_id      Decimal      @db.Decimal(15, 0)
  role_id      Decimal      @db.Decimal(15, 0)
  answer       String
  answer_time  DateTime     @default(dbgenerated("(now())::public.t_datetime")) @db.Timestamp(6)
  sqr_question sqr_question @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_question_answer_question_id")
  sqr_role     sqr_role     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_question_answer_role_id")
  adm_user     adm_user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sqr_question_answer_user_id")

  @@index([question_id], map: "idx_sqr_question_answer_question_id")
  @@index([role_id], map: "idx_sqr_question_answer_role_id")
  @@index([user_id], map: "idx_sqr_question_answer_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_role {
  id                  Decimal               @id(map: "pk_sqr_role") @default(dbgenerated("nextval('seq_sqr_role'::regclass)")) @db.Decimal(15, 0)
  name                String                @unique(map: "udx_sqr_role_name") @default("") @db.VarChar(30)
  caption             String?               @db.VarChar(254)
  description         String?               @db.VarChar(4000)
  group_id            Decimal?              @db.Decimal(15, 0)
  sqr_question_answer sqr_question_answer[]
  adm_group           adm_group?            @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sqr_role_adm_group_id")
  sqr_square_user     sqr_square_user[]

  @@index([caption], map: "idx_sqr_role_caption")
  @@index([group_id], map: "idx_sqr_role_group_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_square {
  id                    Decimal                 @id(map: "pk_sqr_square") @default(dbgenerated("nextval('seq_sqr_square'::regclass)")) @db.Decimal(15, 0)
  name                  String                  @unique(map: "udx_sqr_square_name") @default("") @db.VarChar(30)
  caption               String?                 @db.VarChar(254)
  description           String?                 @db.VarChar(4000)
  active_modules        String?                 @db.VarChar(254)
  sqr_criteria          sqr_criteria?
  sqr_question          sqr_question[]
  sqr_square_eval_group sqr_square_eval_group[]
  sqr_square_team       sqr_square_team[]
  sqr_square_timer      sqr_square_timer[]
  sqr_square_user       sqr_square_user[]

  @@index([caption], map: "idx_sqr_square_caption")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_square_eval_group {
  id                         Decimal                      @id(map: "pk_sqr_square_eval_group") @default(dbgenerated("nextval('seq_sqr_square_eval_team'::regclass)")) @db.Decimal(15, 0)
  square_id                  Decimal                      @db.Decimal(15, 0)
  caption                    String                       @db.VarChar(254)
  code                       String                       @db.VarChar(254)
  modules                    String?                      @db.VarChar(254)
  sqr_square                 sqr_square                   @relation(fields: [square_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_eval_group_square_id")
  sqr_square_eval_group_user sqr_square_eval_group_user[]

  @@unique([square_id, code], map: "udx_sqr_square_eval_group_square_id_code")
  @@index([square_id], map: "idx_sqr_square_eval_group_square_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_square_team {
  id               Decimal            @id(map: "pk_sqr_square_team") @default(dbgenerated("nextval('seq_sqr_square_team'::regclass)")) @db.Decimal(15, 0)
  square_id        Decimal            @db.Decimal(15, 0)
  name             String             @default("") @db.VarChar(30)
  caption          String?            @db.VarChar(254)
  description      String?            @db.VarChar(4000)
  rates            Json?              @db.Json
  sqr_question     sqr_question[]
  sqr_square       sqr_square         @relation(fields: [square_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_team_square_id")
  sqr_square_timer sqr_square_timer[]
  sqr_square_user  sqr_square_user[]

  @@unique([square_id, caption, name], map: "udx_sqr_square_team_square_id_name_caption")
  @@index([square_id], map: "idx_sqr_square_team_square_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_square_timer {
  id                      Decimal                   @id(map: "pk_sqr_square_timer") @default(dbgenerated("nextval('seq_sqr_square_timer'::regclass)")) @db.Decimal(15, 0)
  square_id               Decimal                   @db.Decimal(15, 0)
  team_id                 Decimal?                  @db.Decimal(15, 0)
  caption                 String?                   @db.VarChar(254)
  count                   BigInt?                   @default(0)
  begin_time              DateTime?                 @db.Timestamp(6)
  pause_time              DateTime?                 @db.Timestamp(6)
  continue_time           DateTime?                 @db.Timestamp(6)
  stop_time               DateTime?                 @db.Timestamp(6)
  state                   String?                   @default("READY") @db.VarChar(254)
  sqr_square              sqr_square                @relation(fields: [square_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_timer_square_id")
  sqr_square_team         sqr_square_team?          @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_timer_team_id")
  sqr_square_timer_detail sqr_square_timer_detail[]

  @@unique([square_id, team_id], map: "udx_sqr_square_timer_square_id_team_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_square_timer_detail {
  id               Decimal          @id(map: "pk_sqr_square_timer_detail") @default(dbgenerated("nextval('seq_sqr_square_timer_detail'::regclass)")) @db.Decimal(15, 0)
  timer_id         Decimal          @db.Decimal(15, 0)
  state            String?          @db.VarChar(254)
  time             DateTime?        @db.Timestamp(6)
  count            BigInt?
  description      String?
  sqr_square_timer sqr_square_timer @relation(fields: [timer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_timer_detail_timer_id")

  @@index([timer_id], map: "idx_sqr_square_timer_detail_timer_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_square_user {
  id                         Decimal                      @id(map: "pk_sqr_square_user") @default(dbgenerated("nextval('seq_sqr_square_role'::regclass)")) @db.Decimal(15, 0)
  square_id                  Decimal                      @db.Decimal(15, 0)
  user_id                    Decimal                      @db.Decimal(15, 0)
  role_id                    Decimal                      @db.Decimal(15, 0)
  team_id                    Decimal?                     @db.Decimal(15, 0)
  sqr_square_eval_group_user sqr_square_eval_group_user[]
  sqr_role                   sqr_role                     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_user_role_id")
  sqr_square                 sqr_square                   @relation(fields: [square_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_user_square_id")
  sqr_square_team            sqr_square_team?             @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_user_team_id")
  adm_user                   adm_user                     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_user_user_id")

  @@unique([square_id, user_id, role_id], map: "udx_sqr_square_user_square_id_user_id_role_id")
  @@index([team_id], map: "idx_sqr_square_user_team_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sqr_square_eval_group_user {
  id                    Decimal               @id(map: "pk_sqr_square_eval_group_user") @default(dbgenerated("nextval('seq_sqr_square_eval_group_user'::regclass)")) @db.Decimal(15, 0)
  eval_group_id         Decimal               @db.Decimal(15, 0)
  user_id               Decimal               @db.Decimal(15, 0)
  short_name            String                @db.VarChar(254)
  color                 String?               @db.VarChar(254)
  manage_all_rates      Boolean               @default(true)
  sqr_square_eval_group sqr_square_eval_group @relation(fields: [eval_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_eval_group_user_eval_group_id")
  sqr_square_user       sqr_square_user       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sqr_square_eval_group_user_user_id")

  @@unique([eval_group_id, user_id], map: "udx_sqr_square_eval_group_user_eval_group_id_user_id")
}
